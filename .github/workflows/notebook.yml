name: Deploy to SageMaker

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  S3_BUCKET: order-567
  INSTANCE_NAME: test
  LIFECYCLE_CONFIG_NAME: auto-deploy-config
  LOCAL_NOTEBOOK: notebook.ipynb
  LOCAL_REQUIREMENTS: requirements.txt
  S3_NOTEBOOK_KEY: notebooks/notebook.ipynb
  S3_REQUIREMENTS_KEY: notebooks/requirements.txt

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS credentials with session token
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ☁️ Upload notebook & requirements.txt to S3
        run: |
          echo "📁 Mengunggah file ke S3..."
          aws s3 cp "$LOCAL_NOTEBOOK" "s3://${S3_BUCKET}/${S3_NOTEBOOK_KEY}"
          aws s3 cp "$LOCAL_REQUIREMENTS" "s3://${S3_BUCKET}/${S3_REQUIREMENTS_KEY}"

      - name: 🛠️ Buat lifecycle config script
        run: |
          cat > lifecycle.sh << 'EOF'
#!/bin/bash
set -e

S3_BUCKET=order-567
NOTEBOOK_DIR=/home/ec2-user/SageMaker/notebooks
mkdir -p "$NOTEBOOK_DIR"

echo "📥 Mengambil notebook dan requirements dari S3..."
aws s3 cp s3://$S3_BUCKET/notebooks/notebook.ipynb "$NOTEBOOK_DIR/notebook.ipynb"
aws s3 cp s3://$S3_BUCKET/notebooks/requirements.txt "$NOTEBOOK_DIR/requirements.txt"

echo "📦 Menginstal dependencies..."
pip install -r "$NOTEBOOK_DIR/requirements.txt"
pip install papermill

echo "🚀 Menjalankan notebook..."
papermill "$NOTEBOOK_DIR/notebook.ipynb" "$NOTEBOOK_DIR/output.ipynb"

echo "☁️ Mengunggah output ke S3..."
aws s3 cp "$NOTEBOOK_DIR/output.ipynb" s3://$S3_BUCKET/output/output.ipynb || echo "Gagal upload output"
EOF

      - name: 🔐 Encode lifecycle script ke base64 dan buat lifecycle config
        run: |
          BASE64_SCRIPT=$(base64 -w 0 lifecycle.sh || base64 lifecycle.sh)

          echo "🧬 Membuat lifecycle config (atau lanjut jika sudah ada)..."
          aws sagemaker create-notebook-instance-lifecycle-config \
            --notebook-instance-lifecycle-config-name "$LIFECYCLE_CONFIG_NAME" \
            --on-start '[{"Content":"'"$BASE64_SCRIPT"'"}]' || echo "⚠️ Sudah ada"

          echo "🔗 Mengaitkan lifecycle config ke instance..."
          aws sagemaker update-notebook-instance \
            --notebook-instance-name "$INSTANCE_NAME" \
            --notebook-instance-lifecycle-config-name "$LIFECYCLE_CONFIG_NAME"

      - name: 🚀 Menyalakan notebook instance
        run: |
          echo "🚀 Menyalakan instance SageMaker..."
          aws sagemaker start-notebook-instance \
            --notebook-instance-name "$INSTANCE_NAME"
