name: Full CICD to SageMaker

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Upload .ipynb and lifecycle script to S3
      run: |
        aws s3 cp train_model.ipynb s3://order-567/notebooks/train_model.ipynb
        aws s3 cp on-start.sh s3://order-567/lifecycle/on-start.sh
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_DEFAULT_REGION: us-east-1

    - name: Create or update Lifecycle Configuration
      run: |
        cat > lifecycle-config.json <<EOF
        {
          "NotebookInstanceLifecycleConfigName": "on-start-copy",
          "OnStart": [
            {
              "Content": "$(base64 on-start.sh)"
            }
          ]
        }
        EOF

        # Try create, if fail (already exists), skip
        aws sagemaker create-notebook-instance-lifecycle-config \
          --cli-input-json file://lifecycle-config.json || echo "Lifecycle already exists"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_DEFAULT_REGION: us-east-1

    - name: Attach Lifecycle to Notebook Instance
      run: |
        aws sagemaker update-notebook-instance \
          --notebook-instance-name ml \
          --lifecycle-config-name on-start-copy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_DEFAULT_REGION: us-east-1

    - name: Start Notebook Instance
      run: |
        aws sagemaker start-notebook-instance \
          --notebook-instance-name ml
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_DEFAULT_REGION: us-east-1
